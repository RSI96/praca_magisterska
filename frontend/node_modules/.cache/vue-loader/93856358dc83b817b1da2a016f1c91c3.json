{"remainingRequest":"/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue","mtime":1630571737755},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgSFRUUCB9IGZyb20gIi4uL2h0dHAtY29tbW9uIjsKLy9pbXBvcnQgQ2hhcnQgZnJvbSAiLi4vY29tcG9uZW50cy9DaGFydCI7CgppbXBvcnQgTGluZUNoYXJ0IGZyb20gJy4uL2NvbXBvbmVudHMvTGluZUNoYXJ0LnZ1ZScKCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInJ1bk1MIiwKICBjb21wb25lbnRzOiB7CiAgICAvL2hpZ2hjaGFydHM6IENoYXJ0LAogICAgTGluZUNoYXJ0CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICAgIGNoYXJ0ZGF0YTogbnVsbCwKICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICAgIHk6IHsKICAgICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgc2VsZWN0ZWRQYWlyOiB7aWQ6IDIsIGNvbHVtbl9uYW1lOiAnUmFpblRvbW9ycm93JywgZGF0YXNldF9uYW1lOid3ZWF0aGVyQVVTLmNzdid9LAogICAgICAgIHNlbGVjdGVkQWxnaG9yaXRtOiAnUmFuZG9tRm9yZXN0UmVncmVzc29yJywKICAgICAgICBwYWlyTGlzdDogWwogICAgICAgIHtpZDogMSwgY29sdW1uX25hbWU6ICdEZWZhdWx0JywgZGF0YXNldF9uYW1lOidEZWZhdWx0RGF0YXNldCd9LAogICAgICAgIHtpZDogMiwgY29sdW1uX25hbWU6ICdEZWZhdWx0MicsIGRhdGFzZXRfbmFtZTonRGVmYXVsdERhdGFzZXQyJ30KICAgICAgICBdLAogICAgICAgIGFsZ2hvcml0bUxpc3Q6IFsKICAgICAgICB7dGV4dDogJ0xpbmVhclJlZ3Jlc3Npb24nfSwKICAgICAgICB7dGV4dDogJ1JhbmRvbUZvcmVzdFJlZ3Jlc3Nvcid9LAogICAgICAgIHt0ZXh0OiAnS05laWdoYm9yc0NsYXNzaWZpZXInfQogICAgICBdLAogICAgICAgIHJlc3VsdDoge30sCiAgICAgICAgeV9zZXJpZXNfMTE6IFtdLAogICAgICAgIHlfc2VyaWVzXzI6IFtdCiAgICB9OwogIH0sCiAgYXN5bmMgbW91bnRlZCAoKSB7CiAgICB0aGlzLmxvYWRlZCA9IGZhbHNlCiAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgSFRUUC5wb3N0KCJydW5NTCIsIHsKICAgICAgICAgICAgICBjb2x1bW5fbmFtZTogdGhpcy5zZWxlY3RlZFBhaXIuY29sdW1uX25hbWUsCiAgICAgICAgICAgICAgZGF0YXNldF9uYW1lOiB0aGlzLnNlbGVjdGVkUGFpci5kYXRhc2V0X25hbWUsCiAgICAgICAgICAgICAgYWxnaG9yaXRtX25hbWU6IHRoaXMuc2VsZWN0ZWRBbGdob3JpdG0KICAgICAgICAgICAgfSkKICAgICAgICAgIHRoaXMucmVzdWx0ID0gcmVzcG9uc2UuZGF0YSwKICAgICAgICAgIHRoaXMueV9zZXJpZXNfMTEgPSByZXNwb25zZS5kYXRhLnlfdGVzdAogICAgICAgICAgdGhpcy55X3Nlcmllc18yID0gcmVzcG9uc2UuZGF0YS55X3ByZWQKICAgICAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZQoKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgY29uc29sZS5lcnJvcihlKQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHlfc2VyaWVzXzE6IGZ1bmN0aW9uICgpIHsKICAgICAgY29uc3QgdG9OdW1iZXJzID0gYXJyID0+IGFyci5tYXAoTnVtYmVyKTsKICAgICAgcmV0dXJuIHRvTnVtYmVycyh0aGlzLnlfc2VyaWVzXzExKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgcnVuTUwoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBIVFRQLnBvc3QoInJ1bk1MIiwgewogICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiB0aGlzLnNlbGVjdGVkUGFpci5jb2x1bW5fbmFtZSwKICAgICAgICAgICAgICBkYXRhc2V0X25hbWU6IHRoaXMuc2VsZWN0ZWRQYWlyLmRhdGFzZXRfbmFtZSwKICAgICAgICAgICAgICBhbGdob3JpdG1fbmFtZTogdGhpcy5zZWxlY3RlZEFsZ2hvcml0bQogICAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5yZXN1bHQgPSByZXNwb25zZS5kYXRhLAogICAgICAgICAgdGhpcy55X3Nlcmllc18xMSA9IHJlc3BvbnNlLmRhdGEueV90ZXN0CiAgICAgICAgICB0aGlzLnlfc2VyaWVzXzIgPSByZXNwb25zZS5kYXRhLnlfcHJlZAogICAgICAgICAgCiAgICAgICAgICB0aGlzLmNoYXJ0ZGF0YSA9IHsKICAgICAgICAgIGxhYmVsczogW3RoaXMuZ2V0UmFuZG9tSW50KCksIHRoaXMuZ2V0UmFuZG9tSW50KCldLAogICAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIGxhYmVsOiAnRGF0YSBPbmUnLAogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmODc5NzknLAogICAgICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEueV90ZXN0CiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBsYWJlbDogJ0RhdGEgVHdvJywKICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZjg3OTc5JywKICAgICAgICAgICAgICBkYXRhOiByZXNwb25zZS5kYXRhLnlfcHJlZAogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgdGhpcy5lcnJvcnMucHVzaChlKQogICAgICAgIH0KICAgIH0sCgogIH0sCiAgICBhc3luYyBjcmVhdGVkKCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgSFRUUC5nZXQoYGdldERpc3RpbmN0UGFpcnNgKQogICAgICAgICAgICB0aGlzLnBhaXJMaXN0ID0gcmVzcG9uc2UuZGF0YQogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgdGhpcy5lcnJvcnMucHVzaChlKQogICAgICAgIH0KICAgICAgLy8gICB0cnkgewogICAgICAvLyAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBIVFRQLnBvc3QoInJ1bk1MIiwgewogICAgICAvLyAgICAgICAgIGNvbHVtbl9uYW1lOiB0aGlzLnNlbGVjdGVkUGFpci5jb2x1bW5fbmFtZSwKICAgICAgLy8gICAgICAgICBkYXRhc2V0X25hbWU6IHRoaXMuc2VsZWN0ZWRQYWlyLmRhdGFzZXRfbmFtZSwKICAgICAgLy8gICAgICAgICBhbGdob3JpdG1fbmFtZTogdGhpcy5zZWxlY3RlZEFsZ2hvcml0bQogICAgICAvLyAgICAgICB9KQogICAgICAvLyAgICAgdGhpcy5yZXN1bHQgPSByZXNwb25zZS5kYXRhLAogICAgICAvLyAgICAgdGhpcy55X3Nlcmllc18xMSA9IHJlc3BvbnNlLmRhdGEueV90ZXN0CiAgICAgIC8vICAgICB0aGlzLnlfc2VyaWVzXzIgPSByZXNwb25zZS5kYXRhLnlfcHJlZAogICAgICAvLyB9IGNhdGNoIChlKSB7CiAgICAgIC8vICAgdGhpcy5lcnJvcnMucHVzaChlKQogICAgICAvLyAgIH0KICAgIH0KfTsK"},{"version":3,"sources":["RunML.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RunML.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <h2>Run alghoritms here</h2>\n\n    <div>\n      <select v-model=\"selectedPair\">\n        <option v-for=\"option in pairList\" :key=\"option.id\" :value=\"{column_name: option.column_name, dataset_name: option.dataset_name }\" >\n          {{ option }}\n        </option>\n      </select>\n      <br>\n      <span>Selected: {{ selectedPair }}</span>\n        <br>\n      <span>cl: {{ selectedPair.column_name }}</span>\n    </div>\n    <div>\n      <select v-model=\"selectedAlghoritm\">\n        <option v-for=\"option in alghoritmList\" :key=\"option.text\" :value=\"option.text\">\n          {{ option.text }}\n        </option>\n      </select>\n      <span>Selected: {{ selectedAlghoritm }}</span>\n    </div>\n    <div>\n      <button v-on:click=\"runML()\">Baton</button>\n      <br>\n\n    <line-chart\n      v-if=\"loaded\"\n      :chartdata=\"chartdata\"\n      :options=\"options\"/>\n\n      <br>\n      <span>Result: {{ result.result }}</span>\n      <br>\n      <span>y_test: {{ y_series_1 }}</span>\n      <br>\n      <span>y_pred: {{ y_series_2 }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\n//import axios from 'axios';\nimport { HTTP } from \"../http-common\";\n//import Chart from \"../components/Chart\";\n\nimport LineChart from '../components/LineChart.vue'\n\n\nexport default {\n  name: \"runML\",\n  components: {\n    //highcharts: Chart,\n    LineChart\n  },\n  data() {\n    return {\n        loaded: false,\n        chartdata: null,\n        options: {\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n        },\n\n        selectedPair: {id: 2, column_name: 'RainTomorrow', dataset_name:'weatherAUS.csv'},\n        selectedAlghoritm: 'RandomForestRegressor',\n        pairList: [\n        {id: 1, column_name: 'Default', dataset_name:'DefaultDataset'},\n        {id: 2, column_name: 'Default2', dataset_name:'DefaultDataset2'}\n        ],\n        alghoritmList: [\n        {text: 'LinearRegression'},\n        {text: 'RandomForestRegressor'},\n        {text: 'KNeighborsClassifier'}\n      ],\n        result: {},\n        y_series_11: [],\n        y_series_2: []\n    };\n  },\n  async mounted () {\n    this.loaded = false\n    try {\n        const response = await HTTP.post(\"runML\", {\n              column_name: this.selectedPair.column_name,\n              dataset_name: this.selectedPair.dataset_name,\n              alghoritm_name: this.selectedAlghoritm\n            })\n          this.result = response.data,\n          this.y_series_11 = response.data.y_test\n          this.y_series_2 = response.data.y_pred\n          this.loaded = true\n\n    } catch (e) {\n      console.error(e)\n    }\n  },\n  computed: {\n    y_series_1: function () {\n      const toNumbers = arr => arr.map(Number);\n      return toNumbers(this.y_series_11)\n    }\n  },\n  methods: {\n    async runML() {\n      try {\n        const response = await HTTP.post(\"runML\", {\n              column_name: this.selectedPair.column_name,\n              dataset_name: this.selectedPair.dataset_name,\n              alghoritm_name: this.selectedAlghoritm\n            })\n          this.result = response.data,\n          this.y_series_11 = response.data.y_test\n          this.y_series_2 = response.data.y_pred\n          \n          this.chartdata = {\n          labels: [this.getRandomInt(), this.getRandomInt()],\n          datasets: [\n            {\n              label: 'Data One',\n              backgroundColor: '#f87979',\n              data: response.data.y_test\n            }, {\n              label: 'Data Two',\n              backgroundColor: '#f87979',\n              data: response.data.y_pred\n            }\n          ]\n        }\n      } catch (e) {\n        this.errors.push(e)\n        }\n    },\n\n  },\n    async created() {\n        try {\n            const response = await HTTP.get(`getDistinctPairs`)\n            this.pairList = response.data\n        } catch (e) {\n            this.errors.push(e)\n        }\n      //   try {\n      //     const response = await HTTP.post(\"runML\", {\n      //         column_name: this.selectedPair.column_name,\n      //         dataset_name: this.selectedPair.dataset_name,\n      //         alghoritm_name: this.selectedAlghoritm\n      //       })\n      //     this.result = response.data,\n      //     this.y_series_11 = response.data.y_test\n      //     this.y_series_2 = response.data.y_pred\n      // } catch (e) {\n      //   this.errors.push(e)\n      //   }\n    }\n};\n</script>\n"]}]}