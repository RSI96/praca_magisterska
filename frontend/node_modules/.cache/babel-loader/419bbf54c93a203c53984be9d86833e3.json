{"remainingRequest":"/home/rsi96/praca_magisterska/frontend/node_modules/babel-loader/lib/index.js!/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue","mtime":1631553529928},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3JzaTk2L3ByYWNhX21hZ2lzdGVyc2thL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgSFRUUCB9IGZyb20gIi4uL2h0dHAtY29tbW9uIjsgLy9pbXBvcnQgQ2hhcnQgZnJvbSAiLi4vY29tcG9uZW50cy9DaGFydCI7Ci8vaW1wb3J0IExpbmVDaGFydCBmcm9tICcuLi9jb21wb25lbnRzL0xpbmVDaGFydC52dWUnCgppbXBvcnQgVnVlQXBleENoYXJ0cyBmcm9tICd2dWUtYXBleGNoYXJ0cyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicnVuTUwiLAogIGNvbXBvbmVudHM6IHsKICAgIC8vaGlnaGNoYXJ0czogQ2hhcnQsCiAgICAvL0xpbmVDaGFydAogICAgYXBleGNoYXJ0czogVnVlQXBleENoYXJ0cwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uczogewogICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICBpZDogJ3Z1ZWNoYXJ0LWV4YW1wbGUnCiAgICAgICAgfSAvLyB4YXhpczogewogICAgICAgIC8vICAgY2F0ZWdvcmllczogWzE5OTEsIDE5OTIsIDE5OTMsIDE5OTQsIDE5OTUsIDE5OTYsIDE5OTcsIDE5OThdLAogICAgICAgIC8vIH0sCgogICAgICB9LAogICAgICBzZXJpZXM6IFt7CiAgICAgICAgbmFtZTogJ3lfdGVzdCcsCiAgICAgICAgZGF0YTogW10KICAgICAgfSwgewogICAgICAgIG5hbWU6ICd5X3ByZWQnLAogICAgICAgIGRhdGE6IFtdCiAgICAgIH1dLAogICAgICBzZWxlY3RlZFBhaXI6IHsKICAgICAgICBpZDogMiwKICAgICAgICBjb2x1bW5fbmFtZTogJ1JhaW5Ub21vcnJvdycsCiAgICAgICAgZGF0YXNldF9uYW1lOiAnd2VhdGhlckFVUy5jc3YnCiAgICAgIH0sCiAgICAgIHNlbGVjdGVkQWxnaG9yaXRtOiAnUmFuZG9tRm9yZXN0UmVncmVzc29yJywKICAgICAgcGFpckxpc3Q6IFt7CiAgICAgICAgaWQ6IDEsCiAgICAgICAgY29sdW1uX25hbWU6ICdEZWZhdWx0JywKICAgICAgICBkYXRhc2V0X25hbWU6ICdEZWZhdWx0RGF0YXNldCcKICAgICAgfSwgewogICAgICAgIGlkOiAyLAogICAgICAgIGNvbHVtbl9uYW1lOiAnRGVmYXVsdDInLAogICAgICAgIGRhdGFzZXRfbmFtZTogJ0RlZmF1bHREYXRhc2V0MicKICAgICAgfV0sCiAgICAgIGFsZ2hvcml0bUxpc3Q6IFt7CiAgICAgICAgdGV4dDogJ0xpbmVhclJlZ3Jlc3Npb24nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUmFuZG9tRm9yZXN0UmVncmVzc29yJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0tOZWlnaGJvcnNDbGFzc2lmaWVyJwogICAgICB9XSwKICAgICAgcmVzdWx0OiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJ1bk1MOiBmdW5jdGlvbiBydW5NTCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gSFRUUC5wb3N0KCJydW5NTCIsIHsKICAgICAgICAgICAgICAgICAgY29sdW1uX25hbWU6IF90aGlzLnNlbGVjdGVkUGFpci5jb2x1bW5fbmFtZSwKICAgICAgICAgICAgICAgICAgZGF0YXNldF9uYW1lOiBfdGhpcy5zZWxlY3RlZFBhaXIuZGF0YXNldF9uYW1lLAogICAgICAgICAgICAgICAgICBhbGdob3JpdG1fbmFtZTogX3RoaXMuc2VsZWN0ZWRBbGdob3JpdG0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5yZXN1bHQgPSByZXNwb25zZS5kYXRhLCBfdGhpcy5zZXJpZXMgPSBbewogICAgICAgICAgICAgICAgICBkYXRhOiByZXNwb25zZS5kYXRhLnlfdGVzdC5zbGljZSgwLCAxMDApCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEueV9wcmVkLnNsaWNlKDAsIDEwMCkKICAgICAgICAgICAgICAgIH1dOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICBfdGhpcy5lcnJvcnMucHVzaChfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gSFRUUC5nZXQoImdldERpc3RpbmN0UGFpcnMiKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIF90aGlzMi5wYWlyTGlzdCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBfdGhpczIuZXJyb3JzLnB1c2goX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["RunML.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA,SAAA,IAAA,QAAA,gBAAA,C,CACA;AAEA;;AAEA,OAAA,aAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA;AACA;AACA,IAAA,UAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,EAAA,EAAA;AADA,SADA,CAIA;AACA;AACA;;AANA,OADA;AASA,MAAA,MAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAAA,EAIA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAJA,CATA;AAoBA,MAAA,YAAA,EAAA;AAAA,QAAA,EAAA,EAAA,CAAA;AAAA,QAAA,WAAA,EAAA,cAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OApBA;AAqBA,MAAA,iBAAA,EAAA,uBArBA;AAsBA,MAAA,QAAA,EAAA,CACA;AAAA,QAAA,EAAA,EAAA,CAAA;AAAA,QAAA,WAAA,EAAA,SAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,EAAA,EAAA,CAAA;AAAA,QAAA,WAAA,EAAA,UAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAFA,CAtBA;AA0BA,MAAA,aAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,CA1BA;AA+BA,MAAA,MAAA,EAAA;AA/BA,KAAA;AAiCA,GAzCA;AA2CA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,kBAAA,WAAA,EAAA,KAAA,CAAA,YAAA,CAAA,WADA;AAEA,kBAAA,YAAA,EAAA,KAAA,CAAA,YAAA,CAAA,YAFA;AAGA,kBAAA,cAAA,EAAA,KAAA,CAAA;AAHA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAOA,gBAAA,KAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,EACA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA,kBAAA,IAAA,EAAA,QAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,GAAA;AADA,iBAAA,EAGA;AACA,kBAAA,IAAA,EAAA,QAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,GAAA;AADA,iBAHA,CADA;AAPA;AAAA;;AAAA;AAAA;AAAA;;AAeA,gBAAA,KAAA,CAAA,MAAA,CAAA,IAAA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAnBA,GA3CA;AAiEA,EAAA,OAjEA,qBAiEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,IAAA,CAAA,GAAA,oBAFA;;AAAA;AAEA,cAAA,QAFA;AAGA,cAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;AAHA;AAAA;;AAAA;AAAA;AAAA;;AAKA,cAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAxEA,CAAA","sourcesContent":["<template>\n  <div class=\"page\">\n    <h2>Run and visualize</h2>\n    <br>\n    <div class=\"row justify-content-center\">\n    <div class=\"col-lg-6 col-md-6 col-sm-4\" >\n      <h3>Select Dataset and Column</h3>\n      <select class=\"form-select\" v-model=\"selectedPair\">\n        <option v-for=\"option in pairList\" :key=\"option.id\" :value=\"{column_name: option.column_name, dataset_name: option.dataset_name }\" >\n          <span>Column Name: {{ option.column_name }}, Dataset: {{ option.dataset_name}}</span>\n        </option>\n      </select>\n      <br>\n      <span>Selected Column Name: {{ selectedPair.column_name }} and Dataset: {{ selectedPair.dataset_name}}</span>\n    </div>\n    </div>\n    <br>\n    <div class=\"row justify-content-center\">\n    <div class=\"col-lg-6 col-md-6 col-sm-4\" >\n      <h3>Select Alghoritm</h3>\n      <select class=\"form-select\" v-model=\"selectedAlghoritm\">\n        <option v-for=\"option in alghoritmList\" :key=\"option.text\" :value=\"option.text\">\n          {{ option.text }}\n        </option>\n      </select>\n      <br>\n      <span>Selected Alghoritm: {{ selectedAlghoritm }}</span>\n    </div>\n    </div>\n    <div>\n      <br>\n      <button type=\"button\" class=\"btn btn-dark\" v-on:click=\"runML()\">Run ML alghoritm</button>\n      <br>\n      <div>\n        <h3>Result: {{ result.result }}</h3>\n      </div>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-lg-11 col-md-10 col-sm-8\">\n          <apexcharts type=\"line\" :options=\"chartOptions\" :series=\"series\"></apexcharts>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\n//import axios from 'axios';\nimport { HTTP } from \"../http-common\";\n//import Chart from \"../components/Chart\";\n\n//import LineChart from '../components/LineChart.vue'\n\nimport VueApexCharts from 'vue-apexcharts'\n\nexport default {\n  name: \"runML\",\n  components: {\n    //highcharts: Chart,\n    //LineChart\n    apexcharts: VueApexCharts,\n  },\n  data() {\n    return {\n        chartOptions: {\n          chart: {\n            id: 'vuechart-example',\n          },\n          // xaxis: {\n          //   categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998],\n          // },\n        },\n        series: [{\n          name: 'y_test',\n          data: []\n        },\n        {\n          name: 'y_pred',\n          data: []\n        }],\n\n\n\n        selectedPair: {id: 2, column_name: 'RainTomorrow', dataset_name:'weatherAUS.csv'},\n        selectedAlghoritm: 'RandomForestRegressor',\n        pairList: [\n        {id: 1, column_name: 'Default', dataset_name:'DefaultDataset'},\n        {id: 2, column_name: 'Default2', dataset_name:'DefaultDataset2'}\n        ],\n        alghoritmList: [\n        {text: 'LinearRegression'},\n        {text: 'RandomForestRegressor'},\n        {text: 'KNeighborsClassifier'}\n      ],\n        result: {},\n    };\n  },\n\n  methods: {\n    async runML() {\n      try {\n        const response = await HTTP.post(\"runML\", {\n              column_name: this.selectedPair.column_name,\n              dataset_name: this.selectedPair.dataset_name,\n              alghoritm_name: this.selectedAlghoritm\n            })\n          this.result = response.data,\n          this.series = [{\n          data: response.data.y_test.slice(0, 100)\n          },\n          {\n          data: response.data.y_pred.slice(0, 100)\n          }]\n      } catch (e) {\n        this.errors.push(e)\n        }\n\n      },\n\n  },\n    async created() {\n        try {\n            const response = await HTTP.get(`getDistinctPairs`)\n            this.pairList = response.data\n        } catch (e) {\n            this.errors.push(e)\n        }\n    }\n};\n</script>\n"],"sourceRoot":"src/views"}]}