{"remainingRequest":"/home/rsi96/praca_magisterska/frontend/node_modules/babel-loader/lib/index.js!/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue","mtime":1630529097771},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3JzaTk2L3ByYWNhX21hZ2lzdGVyc2thL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IEhUVFAgfSBmcm9tICIuLi9odHRwLWNvbW1vbiI7CmltcG9ydCBDaGFydCBmcm9tICIuLi9jb21wb25lbnRzL0NoYXJ0IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJydW5NTCIsCiAgY29tcG9uZW50czogewogICAgaGlnaGNoYXJ0czogQ2hhcnQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZFBhaXI6IHsKICAgICAgICBpZDogMiwKICAgICAgICBjb2x1bW5fbmFtZTogJ1JhaW5Ub21vcnJvdycsCiAgICAgICAgZGF0YXNldF9uYW1lOiAnd2VhdGhlckFVUy5jc3YnCiAgICAgIH0sCiAgICAgIHNlbGVjdGVkQWxnaG9yaXRtOiAnUmFuZG9tRm9yZXN0UmVncmVzc29yJywKICAgICAgcGFpckxpc3Q6IFt7CiAgICAgICAgaWQ6IDEsCiAgICAgICAgY29sdW1uX25hbWU6ICdEZWZhdWx0JywKICAgICAgICBkYXRhc2V0X25hbWU6ICdEZWZhdWx0RGF0YXNldCcKICAgICAgfSwgewogICAgICAgIGlkOiAyLAogICAgICAgIGNvbHVtbl9uYW1lOiAnRGVmYXVsdDInLAogICAgICAgIGRhdGFzZXRfbmFtZTogJ0RlZmF1bHREYXRhc2V0MicKICAgICAgfV0sCiAgICAgIGFsZ2hvcml0bUxpc3Q6IFt7CiAgICAgICAgdGV4dDogJ0xpbmVhclJlZ3Jlc3Npb24nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUmFuZG9tRm9yZXN0UmVncmVzc29yJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0tOZWlnaGJvcnNDbGFzc2lmaWVyJwogICAgICB9XSwKICAgICAgcmVzdWx0OiB7fSwKICAgICAgeV9zZXJpZXNfMTE6IFtdLAogICAgICB5X3Nlcmllc18yOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB5X3Nlcmllc18xOiBmdW5jdGlvbiB5X3Nlcmllc18xKCkgewogICAgICB2YXIgdG9OdW1iZXJzID0gZnVuY3Rpb24gdG9OdW1iZXJzKGFycikgewogICAgICAgIHJldHVybiBhcnIubWFwKE51bWJlcik7CiAgICAgIH07CgogICAgICByZXR1cm4gdG9OdW1iZXJzKHRoaXMueV9zZXJpZXNfMTEpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8gcnVuTUwoKSB7CiAgICAvLyAgIGF4aW9zCiAgICAvLyAgICAgLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9ydW5NTCIsIHsKICAgIC8vICAgICAgICAgICBjb2x1bW5fbmFtZTogdGhpcy5zZWxlY3RlZFBhaXIuY29sdW1uX25hbWUsCiAgICAvLyAgICAgICAgICAgZGF0YXNldF9uYW1lOiB0aGlzLnNlbGVjdGVkUGFpci5kYXRhc2V0X25hbWUsCiAgICAvLyAgICAgICAgICAgYWxnaG9yaXRtX25hbWU6IHRoaXMuc2VsZWN0ZWRBbGdob3JpdG0KICAgIC8vICAgICAgICAgfSkKICAgIC8vICAgICAudGhlbihyZXNwb25zZSA9PiAodGhpcy5yZXN1bHQgPSByZXNwb25zZS5kYXRhLAogICAgLy8gICAgICAgICAgICAgICAgICAgICAgIHRoaXMueV9zZXJpZXNfMTEgPSByZXNwb25zZS5kYXRhLnlfdGVzdCkpCiAgICAvLyAgICAgLnRoZW4ocmVzcG9uc2UgPT4gKGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpKSkKICAgIC8vICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKQogICAgLy8gICAgIDsKICAgIC8vIH0sCiAgICBydW5NTDogZnVuY3Rpb24gcnVuTUwoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIEhUVFAucG9zdCgicnVuTUwiLCB7CiAgICAgICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiBfdGhpcy5zZWxlY3RlZFBhaXIuY29sdW1uX25hbWUsCiAgICAgICAgICAgICAgICAgIGRhdGFzZXRfbmFtZTogX3RoaXMuc2VsZWN0ZWRQYWlyLmRhdGFzZXRfbmFtZSwKICAgICAgICAgICAgICAgICAgYWxnaG9yaXRtX25hbWU6IF90aGlzLnNlbGVjdGVkQWxnaG9yaXRtCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMucmVzdWx0ID0gcmVzcG9uc2UuZGF0YSwgX3RoaXMueV9zZXJpZXNfMTEgPSByZXNwb25zZS5kYXRhLnlfdGVzdDsKICAgICAgICAgICAgICAgIF90aGlzLnlfc2VyaWVzXzIgPSByZXNwb25zZS5kYXRhLnlfcHJlZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgICAgX3RoaXMuZXJyb3JzLnB1c2goX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA4XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlc3BvbnNlLCBfcmVzcG9uc2U7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEhUVFAuZ2V0KCJnZXREaXN0aW5jdFBhaXJzIik7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBfdGhpczIucGFpckxpc3QgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgX3RoaXMyLmVycm9ycy5wdXNoKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMzsKICAgICAgICAgICAgICByZXR1cm4gSFRUUC5wb3N0KCJydW5NTCIsIHsKICAgICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiBfdGhpczIuc2VsZWN0ZWRQYWlyLmNvbHVtbl9uYW1lLAogICAgICAgICAgICAgICAgZGF0YXNldF9uYW1lOiBfdGhpczIuc2VsZWN0ZWRQYWlyLmRhdGFzZXRfbmFtZSwKICAgICAgICAgICAgICAgIGFsZ2hvcml0bV9uYW1lOiBfdGhpczIuc2VsZWN0ZWRBbGdob3JpdG0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgX3Jlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXMyLnJlc3VsdCA9IF9yZXNwb25zZS5kYXRhLCBfdGhpczIueV9zZXJpZXNfMTEgPSBfcmVzcG9uc2UuZGF0YS55X3Rlc3Q7CiAgICAgICAgICAgICAgX3RoaXMyLnlfc2VyaWVzXzIgPSBfcmVzcG9uc2UuZGF0YS55X3ByZWQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyMTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxODsKICAgICAgICAgICAgICBfY29udGV4dDIudDEgPSBfY29udGV4dDJbImNhdGNoIl0oMTApOwoKICAgICAgICAgICAgICBfdGhpczIuZXJyb3JzLnB1c2goX2NvbnRleHQyLnQxKTsKCiAgICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XSwgWzEwLCAxOF1dKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["RunML.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <h2>Run alghoritms here</h2>\n\n    <div>\n      <select v-model=\"selectedPair\">\n        <option v-for=\"option in pairList\" :key=\"option.id\" :value=\"{column_name: option.column_name, dataset_name: option.dataset_name }\" >\n          {{ option }}\n        </option>\n      </select>\n      <br>\n      <span>Selected: {{ selectedPair }}</span>\n        <br>\n      <span>cl: {{ selectedPair.column_name }}</span>\n    </div>\n    <div>\n      <select v-model=\"selectedAlghoritm\">\n        <option v-for=\"option in alghoritmList\" :key=\"option.text\" :value=\"option.text\">\n          {{ option.text }}\n        </option>\n      </select>\n      <span>Selected: {{ selectedAlghoritm }}</span>\n    </div>\n    <div>\n      <button v-on:click=\"runML()\">Baton</button>\n      <br>\n      <highcharts\n        :y_series_1_prop=\"y_series_1\"\n        :y_series_2_prop=\"y_series_2\"\n      />\n      <br>\n      <span>Result: {{ result.result }}</span>\n      <br>\n      <span>y_test: {{ y_series_1 }}</span>\n      <br>\n      <span>y_pred: {{ y_series_2 }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\n//import axios from 'axios';\nimport { HTTP } from \"../http-common\";\nimport Chart from \"../components/Chart\";\nexport default {\n  name: \"runML\",\n  components: {\n    highcharts: Chart\n  },\n  data() {\n    return {\n        selectedPair: {id: 2, column_name: 'RainTomorrow', dataset_name:'weatherAUS.csv'},\n        selectedAlghoritm: 'RandomForestRegressor',\n        pairList: [\n        {id: 1, column_name: 'Default', dataset_name:'DefaultDataset'},\n        {id: 2, column_name: 'Default2', dataset_name:'DefaultDataset2'}\n        ],\n        alghoritmList: [\n        {text: 'LinearRegression'},\n        {text: 'RandomForestRegressor'},\n        {text: 'KNeighborsClassifier'}\n      ],\n        result: {},\n        y_series_11: [],\n        y_series_2: []\n    };\n  },\n  computed: {\n    y_series_1: function () {\n      const toNumbers = arr => arr.map(Number);\n      return toNumbers(this.y_series_11)\n    }\n  },\n  methods: {\n    // runML() {\n    //   axios\n    //     .post(\"http://localhost:5000/runML\", {\n    //           column_name: this.selectedPair.column_name,\n    //           dataset_name: this.selectedPair.dataset_name,\n    //           alghoritm_name: this.selectedAlghoritm\n    //         })\n    //     .then(response => (this.result = response.data,\n    //                       this.y_series_11 = response.data.y_test))\n    //     .then(response => (console.log(response.data)))\n    //     .catch(error => console.log(error))\n    //     ;\n    // },\n    async runML() {\n      try {\n        const response = await HTTP.post(\"runML\", {\n              column_name: this.selectedPair.column_name,\n              dataset_name: this.selectedPair.dataset_name,\n              alghoritm_name: this.selectedAlghoritm\n            })\n          this.result = response.data,\n          this.y_series_11 = response.data.y_test\n          this.y_series_2 = response.data.y_pred\n      } catch (e) {\n        this.errors.push(e)\n        }\n    }\n  },\n    async created() {\n        try {\n            const response = await HTTP.get(`getDistinctPairs`)\n            this.pairList = response.data\n        } catch (e) {\n            this.errors.push(e)\n        }\n        try {\n          const response = await HTTP.post(\"runML\", {\n              column_name: this.selectedPair.column_name,\n              dataset_name: this.selectedPair.dataset_name,\n              alghoritm_name: this.selectedAlghoritm\n            })\n          this.result = response.data,\n          this.y_series_11 = response.data.y_test\n          this.y_series_2 = response.data.y_pred\n      } catch (e) {\n        this.errors.push(e)\n        }\n    }\n};\n</script>"],"sourceRoot":"src/views"}]}