{"remainingRequest":"/home/rsi96/praca_magisterska/frontend/node_modules/babel-loader/lib/index.js!/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rsi96/praca_magisterska/frontend/src/views/RunML.vue","mtime":1630571737755},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rsi96/praca_magisterska/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3JzaTk2L3ByYWNhX21hZ2lzdGVyc2thL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IEhUVFAgfSBmcm9tICIuLi9odHRwLWNvbW1vbiI7IC8vaW1wb3J0IENoYXJ0IGZyb20gIi4uL2NvbXBvbmVudHMvQ2hhcnQiOwoKaW1wb3J0IExpbmVDaGFydCBmcm9tICcuLi9jb21wb25lbnRzL0xpbmVDaGFydC52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInJ1bk1MIiwKICBjb21wb25lbnRzOiB7CiAgICAvL2hpZ2hjaGFydHM6IENoYXJ0LAogICAgTGluZUNoYXJ0OiBMaW5lQ2hhcnQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICBjaGFydGRhdGE6IG51bGwsCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHk6IHsKICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHNlbGVjdGVkUGFpcjogewogICAgICAgIGlkOiAyLAogICAgICAgIGNvbHVtbl9uYW1lOiAnUmFpblRvbW9ycm93JywKICAgICAgICBkYXRhc2V0X25hbWU6ICd3ZWF0aGVyQVVTLmNzdicKICAgICAgfSwKICAgICAgc2VsZWN0ZWRBbGdob3JpdG06ICdSYW5kb21Gb3Jlc3RSZWdyZXNzb3InLAogICAgICBwYWlyTGlzdDogW3sKICAgICAgICBpZDogMSwKICAgICAgICBjb2x1bW5fbmFtZTogJ0RlZmF1bHQnLAogICAgICAgIGRhdGFzZXRfbmFtZTogJ0RlZmF1bHREYXRhc2V0JwogICAgICB9LCB7CiAgICAgICAgaWQ6IDIsCiAgICAgICAgY29sdW1uX25hbWU6ICdEZWZhdWx0MicsCiAgICAgICAgZGF0YXNldF9uYW1lOiAnRGVmYXVsdERhdGFzZXQyJwogICAgICB9XSwKICAgICAgYWxnaG9yaXRtTGlzdDogW3sKICAgICAgICB0ZXh0OiAnTGluZWFyUmVncmVzc2lvbicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdSYW5kb21Gb3Jlc3RSZWdyZXNzb3InCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnS05laWdoYm9yc0NsYXNzaWZpZXInCiAgICAgIH1dLAogICAgICByZXN1bHQ6IHt9LAogICAgICB5X3Nlcmllc18xMTogW10sCiAgICAgIHlfc2VyaWVzXzI6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMubG9hZGVkID0gZmFsc2U7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIEhUVFAucG9zdCgicnVuTUwiLCB7CiAgICAgICAgICAgICAgICBjb2x1bW5fbmFtZTogX3RoaXMuc2VsZWN0ZWRQYWlyLmNvbHVtbl9uYW1lLAogICAgICAgICAgICAgICAgZGF0YXNldF9uYW1lOiBfdGhpcy5zZWxlY3RlZFBhaXIuZGF0YXNldF9uYW1lLAogICAgICAgICAgICAgICAgYWxnaG9yaXRtX25hbWU6IF90aGlzLnNlbGVjdGVkQWxnaG9yaXRtCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF90aGlzLnJlc3VsdCA9IHJlc3BvbnNlLmRhdGEsIF90aGlzLnlfc2VyaWVzXzExID0gcmVzcG9uc2UuZGF0YS55X3Rlc3Q7CiAgICAgICAgICAgICAgX3RoaXMueV9zZXJpZXNfMiA9IHJlc3BvbnNlLmRhdGEueV9wcmVkOwogICAgICAgICAgICAgIF90aGlzLmxvYWRlZCA9IHRydWU7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTBdXSk7CiAgICB9KSkoKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB5X3Nlcmllc18xOiBmdW5jdGlvbiB5X3Nlcmllc18xKCkgewogICAgICB2YXIgdG9OdW1iZXJzID0gZnVuY3Rpb24gdG9OdW1iZXJzKGFycikgewogICAgICAgIHJldHVybiBhcnIubWFwKE51bWJlcik7CiAgICAgIH07CgogICAgICByZXR1cm4gdG9OdW1iZXJzKHRoaXMueV9zZXJpZXNfMTEpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcnVuTUw6IGZ1bmN0aW9uIHJ1bk1MKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIEhUVFAucG9zdCgicnVuTUwiLCB7CiAgICAgICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiBfdGhpczIuc2VsZWN0ZWRQYWlyLmNvbHVtbl9uYW1lLAogICAgICAgICAgICAgICAgICBkYXRhc2V0X25hbWU6IF90aGlzMi5zZWxlY3RlZFBhaXIuZGF0YXNldF9uYW1lLAogICAgICAgICAgICAgICAgICBhbGdob3JpdG1fbmFtZTogX3RoaXMyLnNlbGVjdGVkQWxnaG9yaXRtCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMi5yZXN1bHQgPSByZXNwb25zZS5kYXRhLCBfdGhpczIueV9zZXJpZXNfMTEgPSByZXNwb25zZS5kYXRhLnlfdGVzdDsKICAgICAgICAgICAgICAgIF90aGlzMi55X3Nlcmllc18yID0gcmVzcG9uc2UuZGF0YS55X3ByZWQ7CiAgICAgICAgICAgICAgICBfdGhpczIuY2hhcnRkYXRhID0gewogICAgICAgICAgICAgICAgICBsYWJlbHM6IFtfdGhpczIuZ2V0UmFuZG9tSW50KCksIF90aGlzMi5nZXRSYW5kb21JbnQoKV0sCiAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRGF0YSBPbmUnLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmODc5NzknLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEueV90ZXN0CiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ0RhdGEgVHdvJywKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZjg3OTc5JywKICAgICAgICAgICAgICAgICAgICBkYXRhOiByZXNwb25zZS5kYXRhLnlfcHJlZAogICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICAgIF90aGlzMi5lcnJvcnMucHVzaChfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gSFRUUC5nZXQoImdldERpc3RpbmN0UGFpcnMiKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIF90aGlzMy5wYWlyTGlzdCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMDsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICBfdGhpczMuZXJyb3JzLnB1c2goX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["RunML.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <h2>Run alghoritms here</h2>\n\n    <div>\n      <select v-model=\"selectedPair\">\n        <option v-for=\"option in pairList\" :key=\"option.id\" :value=\"{column_name: option.column_name, dataset_name: option.dataset_name }\" >\n          {{ option }}\n        </option>\n      </select>\n      <br>\n      <span>Selected: {{ selectedPair }}</span>\n        <br>\n      <span>cl: {{ selectedPair.column_name }}</span>\n    </div>\n    <div>\n      <select v-model=\"selectedAlghoritm\">\n        <option v-for=\"option in alghoritmList\" :key=\"option.text\" :value=\"option.text\">\n          {{ option.text }}\n        </option>\n      </select>\n      <span>Selected: {{ selectedAlghoritm }}</span>\n    </div>\n    <div>\n      <button v-on:click=\"runML()\">Baton</button>\n      <br>\n\n    <line-chart\n      v-if=\"loaded\"\n      :chartdata=\"chartdata\"\n      :options=\"options\"/>\n\n      <br>\n      <span>Result: {{ result.result }}</span>\n      <br>\n      <span>y_test: {{ y_series_1 }}</span>\n      <br>\n      <span>y_pred: {{ y_series_2 }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\n//import axios from 'axios';\nimport { HTTP } from \"../http-common\";\n//import Chart from \"../components/Chart\";\n\nimport LineChart from '../components/LineChart.vue'\n\n\nexport default {\n  name: \"runML\",\n  components: {\n    //highcharts: Chart,\n    LineChart\n  },\n  data() {\n    return {\n        loaded: false,\n        chartdata: null,\n        options: {\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n        },\n\n        selectedPair: {id: 2, column_name: 'RainTomorrow', dataset_name:'weatherAUS.csv'},\n        selectedAlghoritm: 'RandomForestRegressor',\n        pairList: [\n        {id: 1, column_name: 'Default', dataset_name:'DefaultDataset'},\n        {id: 2, column_name: 'Default2', dataset_name:'DefaultDataset2'}\n        ],\n        alghoritmList: [\n        {text: 'LinearRegression'},\n        {text: 'RandomForestRegressor'},\n        {text: 'KNeighborsClassifier'}\n      ],\n        result: {},\n        y_series_11: [],\n        y_series_2: []\n    };\n  },\n  async mounted () {\n    this.loaded = false\n    try {\n        const response = await HTTP.post(\"runML\", {\n              column_name: this.selectedPair.column_name,\n              dataset_name: this.selectedPair.dataset_name,\n              alghoritm_name: this.selectedAlghoritm\n            })\n          this.result = response.data,\n          this.y_series_11 = response.data.y_test\n          this.y_series_2 = response.data.y_pred\n          this.loaded = true\n\n    } catch (e) {\n      console.error(e)\n    }\n  },\n  computed: {\n    y_series_1: function () {\n      const toNumbers = arr => arr.map(Number);\n      return toNumbers(this.y_series_11)\n    }\n  },\n  methods: {\n    async runML() {\n      try {\n        const response = await HTTP.post(\"runML\", {\n              column_name: this.selectedPair.column_name,\n              dataset_name: this.selectedPair.dataset_name,\n              alghoritm_name: this.selectedAlghoritm\n            })\n          this.result = response.data,\n          this.y_series_11 = response.data.y_test\n          this.y_series_2 = response.data.y_pred\n          \n          this.chartdata = {\n          labels: [this.getRandomInt(), this.getRandomInt()],\n          datasets: [\n            {\n              label: 'Data One',\n              backgroundColor: '#f87979',\n              data: response.data.y_test\n            }, {\n              label: 'Data Two',\n              backgroundColor: '#f87979',\n              data: response.data.y_pred\n            }\n          ]\n        }\n      } catch (e) {\n        this.errors.push(e)\n        }\n    },\n\n  },\n    async created() {\n        try {\n            const response = await HTTP.get(`getDistinctPairs`)\n            this.pairList = response.data\n        } catch (e) {\n            this.errors.push(e)\n        }\n      //   try {\n      //     const response = await HTTP.post(\"runML\", {\n      //         column_name: this.selectedPair.column_name,\n      //         dataset_name: this.selectedPair.dataset_name,\n      //         alghoritm_name: this.selectedAlghoritm\n      //       })\n      //     this.result = response.data,\n      //     this.y_series_11 = response.data.y_test\n      //     this.y_series_2 = response.data.y_pred\n      // } catch (e) {\n      //   this.errors.push(e)\n      //   }\n    }\n};\n</script>\n"],"sourceRoot":"src/views"}]}